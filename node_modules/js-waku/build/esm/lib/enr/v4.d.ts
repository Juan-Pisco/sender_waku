/// <reference types="node" />
import { NodeId } from './types';
export declare function hash(input: Uint8Array): Buffer;
export declare function createPrivateKey(): Promise<Buffer>;
export declare function publicKey(privKey: Uint8Array): Buffer;
export declare function sign(privKey: Uint8Array, msg: Uint8Array): Buffer;
export declare function verify(pubKey: Buffer, msg: Buffer, sig: Buffer): boolean;
export declare function nodeId(pubKey: Uint8Array): NodeId;
export declare class ENRKeyPair {
    readonly nodeId: NodeId;
    readonly privateKey: Buffer;
    readonly publicKey: Buffer;
    constructor(nodeId: NodeId, privateKey: Buffer, publicKey: Buffer);
    static create(privateKey?: Buffer): Promise<ENRKeyPair>;
    sign(msg: Buffer): Buffer;
    verify(msg: Buffer, sig: Buffer): boolean;
}
