import _m0 from 'protobufjs/minimal';
import { WakuMessage } from '../../waku/v2/message';
export declare const protobufPackage = "waku.v2";
export interface Index {
    digest: Uint8Array;
    receivedTime: number;
    senderTime: number;
}
export interface PagingInfo {
    pageSize: number;
    cursor: Index | undefined;
    direction: PagingInfo_Direction;
}
export declare enum PagingInfo_Direction {
    DIRECTION_BACKWARD_UNSPECIFIED = 0,
    DIRECTION_FORWARD = 1,
    UNRECOGNIZED = -1
}
export declare function pagingInfo_DirectionFromJSON(object: any): PagingInfo_Direction;
export declare function pagingInfo_DirectionToJSON(object: PagingInfo_Direction): string;
export interface ContentFilter {
    contentTopic: string;
}
export interface HistoryQuery {
    pubSubTopic?: string | undefined;
    contentFilters: ContentFilter[];
    pagingInfo?: PagingInfo | undefined;
    startTime?: number | undefined;
    endTime?: number | undefined;
}
export interface HistoryResponse {
    messages: WakuMessage[];
    pagingInfo: PagingInfo | undefined;
    error: HistoryResponse_Error;
}
export declare enum HistoryResponse_Error {
    ERROR_NONE_UNSPECIFIED = 0,
    ERROR_INVALID_CURSOR = 1,
    UNRECOGNIZED = -1
}
export declare function historyResponse_ErrorFromJSON(object: any): HistoryResponse_Error;
export declare function historyResponse_ErrorToJSON(object: HistoryResponse_Error): string;
export interface HistoryRPC {
    requestId: string;
    query: HistoryQuery | undefined;
    response: HistoryResponse | undefined;
}
export declare const Index: {
    encode(message: Index, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Index;
    fromJSON(object: any): Index;
    toJSON(message: Index): unknown;
    fromPartial<I extends {
        digest?: Uint8Array | undefined;
        receivedTime?: number | undefined;
        senderTime?: number | undefined;
    } & {
        digest?: Uint8Array | undefined;
        receivedTime?: number | undefined;
        senderTime?: number | undefined;
    } & Record<Exclude<keyof I, keyof Index>, never>>(object: I): Index;
};
export declare const PagingInfo: {
    encode(message: PagingInfo, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): PagingInfo;
    fromJSON(object: any): PagingInfo;
    toJSON(message: PagingInfo): unknown;
    fromPartial<I extends {
        pageSize?: number | undefined;
        cursor?: {
            digest?: Uint8Array | undefined;
            receivedTime?: number | undefined;
            senderTime?: number | undefined;
        } | undefined;
        direction?: PagingInfo_Direction | undefined;
    } & {
        pageSize?: number | undefined;
        cursor?: ({
            digest?: Uint8Array | undefined;
            receivedTime?: number | undefined;
            senderTime?: number | undefined;
        } & {
            digest?: Uint8Array | undefined;
            receivedTime?: number | undefined;
            senderTime?: number | undefined;
        } & Record<Exclude<keyof I["cursor"], keyof Index>, never>) | undefined;
        direction?: PagingInfo_Direction | undefined;
    } & Record<Exclude<keyof I, keyof PagingInfo>, never>>(object: I): PagingInfo;
};
export declare const ContentFilter: {
    encode(message: ContentFilter, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ContentFilter;
    fromJSON(object: any): ContentFilter;
    toJSON(message: ContentFilter): unknown;
    fromPartial<I extends {
        contentTopic?: string | undefined;
    } & {
        contentTopic?: string | undefined;
    } & Record<Exclude<keyof I, "contentTopic">, never>>(object: I): ContentFilter;
};
export declare const HistoryQuery: {
    encode(message: HistoryQuery, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): HistoryQuery;
    fromJSON(object: any): HistoryQuery;
    toJSON(message: HistoryQuery): unknown;
    fromPartial<I extends {
        pubSubTopic?: string | undefined;
        contentFilters?: {
            contentTopic?: string | undefined;
        }[] | undefined;
        pagingInfo?: {
            pageSize?: number | undefined;
            cursor?: {
                digest?: Uint8Array | undefined;
                receivedTime?: number | undefined;
                senderTime?: number | undefined;
            } | undefined;
            direction?: PagingInfo_Direction | undefined;
        } | undefined;
        startTime?: number | undefined;
        endTime?: number | undefined;
    } & {
        pubSubTopic?: string | undefined;
        contentFilters?: ({
            contentTopic?: string | undefined;
        }[] & ({
            contentTopic?: string | undefined;
        } & {
            contentTopic?: string | undefined;
        } & Record<Exclude<keyof I["contentFilters"][number], "contentTopic">, never>)[] & Record<Exclude<keyof I["contentFilters"], number | keyof {
            contentTopic?: string | undefined;
        }[]>, never>) | undefined;
        pagingInfo?: ({
            pageSize?: number | undefined;
            cursor?: {
                digest?: Uint8Array | undefined;
                receivedTime?: number | undefined;
                senderTime?: number | undefined;
            } | undefined;
            direction?: PagingInfo_Direction | undefined;
        } & {
            pageSize?: number | undefined;
            cursor?: ({
                digest?: Uint8Array | undefined;
                receivedTime?: number | undefined;
                senderTime?: number | undefined;
            } & {
                digest?: Uint8Array | undefined;
                receivedTime?: number | undefined;
                senderTime?: number | undefined;
            } & Record<Exclude<keyof I["pagingInfo"]["cursor"], keyof Index>, never>) | undefined;
            direction?: PagingInfo_Direction | undefined;
        } & Record<Exclude<keyof I["pagingInfo"], keyof PagingInfo>, never>) | undefined;
        startTime?: number | undefined;
        endTime?: number | undefined;
    } & Record<Exclude<keyof I, keyof HistoryQuery>, never>>(object: I): HistoryQuery;
};
export declare const HistoryResponse: {
    encode(message: HistoryResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): HistoryResponse;
    fromJSON(object: any): HistoryResponse;
    toJSON(message: HistoryResponse): unknown;
    fromPartial<I extends {
        messages?: {
            payload?: Uint8Array | undefined;
            contentTopic?: string | undefined;
            version?: number | undefined;
            timestamp?: number | undefined;
        }[] | undefined;
        pagingInfo?: {
            pageSize?: number | undefined;
            cursor?: {
                digest?: Uint8Array | undefined;
                receivedTime?: number | undefined;
                senderTime?: number | undefined;
            } | undefined;
            direction?: PagingInfo_Direction | undefined;
        } | undefined;
        error?: HistoryResponse_Error | undefined;
    } & {
        messages?: ({
            payload?: Uint8Array | undefined;
            contentTopic?: string | undefined;
            version?: number | undefined;
            timestamp?: number | undefined;
        }[] & ({
            payload?: Uint8Array | undefined;
            contentTopic?: string | undefined;
            version?: number | undefined;
            timestamp?: number | undefined;
        } & {
            payload?: Uint8Array | undefined;
            contentTopic?: string | undefined;
            version?: number | undefined;
            timestamp?: number | undefined;
        } & Record<Exclude<keyof I["messages"][number], keyof WakuMessage>, never>)[] & Record<Exclude<keyof I["messages"], number | keyof {
            payload?: Uint8Array | undefined;
            contentTopic?: string | undefined;
            version?: number | undefined;
            timestamp?: number | undefined;
        }[]>, never>) | undefined;
        pagingInfo?: ({
            pageSize?: number | undefined;
            cursor?: {
                digest?: Uint8Array | undefined;
                receivedTime?: number | undefined;
                senderTime?: number | undefined;
            } | undefined;
            direction?: PagingInfo_Direction | undefined;
        } & {
            pageSize?: number | undefined;
            cursor?: ({
                digest?: Uint8Array | undefined;
                receivedTime?: number | undefined;
                senderTime?: number | undefined;
            } & {
                digest?: Uint8Array | undefined;
                receivedTime?: number | undefined;
                senderTime?: number | undefined;
            } & Record<Exclude<keyof I["pagingInfo"]["cursor"], keyof Index>, never>) | undefined;
            direction?: PagingInfo_Direction | undefined;
        } & Record<Exclude<keyof I["pagingInfo"], keyof PagingInfo>, never>) | undefined;
        error?: HistoryResponse_Error | undefined;
    } & Record<Exclude<keyof I, keyof HistoryResponse>, never>>(object: I): HistoryResponse;
};
export declare const HistoryRPC: {
    encode(message: HistoryRPC, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): HistoryRPC;
    fromJSON(object: any): HistoryRPC;
    toJSON(message: HistoryRPC): unknown;
    fromPartial<I extends {
        requestId?: string | undefined;
        query?: {
            pubSubTopic?: string | undefined;
            contentFilters?: {
                contentTopic?: string | undefined;
            }[] | undefined;
            pagingInfo?: {
                pageSize?: number | undefined;
                cursor?: {
                    digest?: Uint8Array | undefined;
                    receivedTime?: number | undefined;
                    senderTime?: number | undefined;
                } | undefined;
                direction?: PagingInfo_Direction | undefined;
            } | undefined;
            startTime?: number | undefined;
            endTime?: number | undefined;
        } | undefined;
        response?: {
            messages?: {
                payload?: Uint8Array | undefined;
                contentTopic?: string | undefined;
                version?: number | undefined;
                timestamp?: number | undefined;
            }[] | undefined;
            pagingInfo?: {
                pageSize?: number | undefined;
                cursor?: {
                    digest?: Uint8Array | undefined;
                    receivedTime?: number | undefined;
                    senderTime?: number | undefined;
                } | undefined;
                direction?: PagingInfo_Direction | undefined;
            } | undefined;
            error?: HistoryResponse_Error | undefined;
        } | undefined;
    } & {
        requestId?: string | undefined;
        query?: ({
            pubSubTopic?: string | undefined;
            contentFilters?: {
                contentTopic?: string | undefined;
            }[] | undefined;
            pagingInfo?: {
                pageSize?: number | undefined;
                cursor?: {
                    digest?: Uint8Array | undefined;
                    receivedTime?: number | undefined;
                    senderTime?: number | undefined;
                } | undefined;
                direction?: PagingInfo_Direction | undefined;
            } | undefined;
            startTime?: number | undefined;
            endTime?: number | undefined;
        } & {
            pubSubTopic?: string | undefined;
            contentFilters?: ({
                contentTopic?: string | undefined;
            }[] & ({
                contentTopic?: string | undefined;
            } & {
                contentTopic?: string | undefined;
            } & Record<Exclude<keyof I["query"]["contentFilters"][number], "contentTopic">, never>)[] & Record<Exclude<keyof I["query"]["contentFilters"], number | keyof {
                contentTopic?: string | undefined;
            }[]>, never>) | undefined;
            pagingInfo?: ({
                pageSize?: number | undefined;
                cursor?: {
                    digest?: Uint8Array | undefined;
                    receivedTime?: number | undefined;
                    senderTime?: number | undefined;
                } | undefined;
                direction?: PagingInfo_Direction | undefined;
            } & {
                pageSize?: number | undefined;
                cursor?: ({
                    digest?: Uint8Array | undefined;
                    receivedTime?: number | undefined;
                    senderTime?: number | undefined;
                } & {
                    digest?: Uint8Array | undefined;
                    receivedTime?: number | undefined;
                    senderTime?: number | undefined;
                } & Record<Exclude<keyof I["query"]["pagingInfo"]["cursor"], keyof Index>, never>) | undefined;
                direction?: PagingInfo_Direction | undefined;
            } & Record<Exclude<keyof I["query"]["pagingInfo"], keyof PagingInfo>, never>) | undefined;
            startTime?: number | undefined;
            endTime?: number | undefined;
        } & Record<Exclude<keyof I["query"], keyof HistoryQuery>, never>) | undefined;
        response?: ({
            messages?: {
                payload?: Uint8Array | undefined;
                contentTopic?: string | undefined;
                version?: number | undefined;
                timestamp?: number | undefined;
            }[] | undefined;
            pagingInfo?: {
                pageSize?: number | undefined;
                cursor?: {
                    digest?: Uint8Array | undefined;
                    receivedTime?: number | undefined;
                    senderTime?: number | undefined;
                } | undefined;
                direction?: PagingInfo_Direction | undefined;
            } | undefined;
            error?: HistoryResponse_Error | undefined;
        } & {
            messages?: ({
                payload?: Uint8Array | undefined;
                contentTopic?: string | undefined;
                version?: number | undefined;
                timestamp?: number | undefined;
            }[] & ({
                payload?: Uint8Array | undefined;
                contentTopic?: string | undefined;
                version?: number | undefined;
                timestamp?: number | undefined;
            } & {
                payload?: Uint8Array | undefined;
                contentTopic?: string | undefined;
                version?: number | undefined;
                timestamp?: number | undefined;
            } & Record<Exclude<keyof I["response"]["messages"][number], keyof WakuMessage>, never>)[] & Record<Exclude<keyof I["response"]["messages"], number | keyof {
                payload?: Uint8Array | undefined;
                contentTopic?: string | undefined;
                version?: number | undefined;
                timestamp?: number | undefined;
            }[]>, never>) | undefined;
            pagingInfo?: ({
                pageSize?: number | undefined;
                cursor?: {
                    digest?: Uint8Array | undefined;
                    receivedTime?: number | undefined;
                    senderTime?: number | undefined;
                } | undefined;
                direction?: PagingInfo_Direction | undefined;
            } & {
                pageSize?: number | undefined;
                cursor?: ({
                    digest?: Uint8Array | undefined;
                    receivedTime?: number | undefined;
                    senderTime?: number | undefined;
                } & {
                    digest?: Uint8Array | undefined;
                    receivedTime?: number | undefined;
                    senderTime?: number | undefined;
                } & Record<Exclude<keyof I["response"]["pagingInfo"]["cursor"], keyof Index>, never>) | undefined;
                direction?: PagingInfo_Direction | undefined;
            } & Record<Exclude<keyof I["response"]["pagingInfo"], keyof PagingInfo>, never>) | undefined;
            error?: HistoryResponse_Error | undefined;
        } & Record<Exclude<keyof I["response"], keyof HistoryResponse>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof HistoryRPC>, never>>(object: I): HistoryRPC;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
